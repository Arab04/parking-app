# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Build jar file
      run: mvn --batch-mode --update-snapshots verify
    - name: Create jar
      run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
      #    - name: Build and Push Docker Image
#      uses: mr-smithers-excellent/docker-build-push@v6
#      with:
#        image: arab04/smart-parking
#        registry: docker.io
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}


    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  deploy:
    runs-on: ubuntu-latest
    name: Deploy the JAR file to the remote server
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
      - name: Generate the package
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      - name: Deploy the package to the remote server
        uses: Arab04/parking-app@release
        with:
          local: target/workflow-github-actions-1.0-SNAPSHOT.jar
          remote: smart-parking/demo/actions/workflow-github-actions.jar # My remote directory
          host: ${{secrets.HOST}}
          username: ${{secrets.SSH_USER}}
          password: ${{secrets.SSH_PASSWORD}}
      - name: Run a script on remote server (start the application)
        if: always()
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd smart-parking/demo/actions/ && java -jar workflow-github-actions.jar &
          host: ${{secrets.HOST}}
          user: ${{secrets.SSH_USER}}
          pass: ${{secrets.SSH_PASSWORD}}
          args: "-tt"
          # The & in the command runs the process on background